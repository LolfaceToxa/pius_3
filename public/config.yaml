openapi: "3.0.0"
info:
  description: "REST API Lab3"
  version: "1"
  title: "Lab3"
servers:
  - url: http://localhost:8000/
tags:
- name: "Card Endpoints"
- name: "Check Endpoints"
paths:
  /api/v1/cards:
    post:
      tags:
      - "Card Endpoints"
      operationId: "createCard"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/v1/cards/{id}:
    get:
      tags:
      - "Card Endpoints"
      operationId: "getCard"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
      - "Card Endpoints"
      operationId: "deleteCard"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
      - "Card Endpoints"
      operationId: "putCard"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: "string"
                check_id:
                  type: "integer"
                created_at:
                  type: "string"
                  format: "date-time"
                updated_at:
                  type: "string"
                  format: "date-time"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      tags:
      - "Card Endpoints"
      operationId: "patchCard"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: "user"
          schema:
            type: "string"
        - in: query
          name: "check_id"
          schema:
            type: "integer"
        - in: query
          name: "created_at"
          schema:
            type: "string"
            format: "date-time"
        - in: query
          name: "updated_at"
          schema:
            type: "string"
            format: "date-time"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/v1/checks:
    post:
      tags:
      - "Check Endpoints"
      operationId: "createCheck"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Check'
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/v1/checks/{id}:
    get:
      tags:
      - "Check Endpoints"
      operationId: "getCheck"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
      - "Check Endpoints"
      operationId: "deleteCheck"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
            format: int64
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
      - "Check Endpoints"
      operationId: "putCheck"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: "string"
                created_at:
                  type: "string"
                  format: "date-time"
                updated_at:
                  type: "string"
                  format: "date-time"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      tags:
      - "Check Endpoints"
      operationId: "patchParameters"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: "email"
          schema:
            type: "string"
        - in: query
          name: "created_at"
          schema:
            type: "string"
            format: "date-time"
        - in: query
          name: "updated_at"
          schema:
            type: "string"
            format: "date-time"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas: 
    Card:
      type: object
      properties:
        id: 
          type: integer
        user:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        check_id:
          type: integer
    Check:
      type: object
      properties:
        id: 
          type: integer
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Response:
      type: object
      properties:
        data:
          oneOf:
            - type: object
            - type: object
            - type: array
              items:
                type: object
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                $ref: '#/components/schemas/Code'
              message:
                type: string
              meta:
                type: object
        meta: 
          type: object
    Code:
      type: string
      enum: [200,201 ,400, 401, 403, 404, 500]